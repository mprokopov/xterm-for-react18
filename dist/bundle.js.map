{"version":3,"file":"bundle.js","mappings":"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AAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,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","sources":["webpack://xtermForReact/webpack/universalModuleDefinition","webpack://xtermForReact/./node_modules/xterm/css/xterm.css","webpack://xtermForReact/./node_modules/css-loader/dist/runtime/api.js","webpack://xtermForReact/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://xtermForReact/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://xtermForReact/./node_modules/prop-types/index.js","webpack://xtermForReact/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://xtermForReact/./node_modules/react/cjs/react.production.min.js","webpack://xtermForReact/./node_modules/react/index.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://xtermForReact/xterm/webpack/universalModuleDefinition","webpack://xtermForReact/xterm/./src/browser/AccessibilityManager.ts","webpack://xtermForReact/xterm/./src/browser/Clipboard.ts","webpack://xtermForReact/xterm/./src/browser/ColorContrastCache.ts","webpack://xtermForReact/xterm/./src/browser/Dom.ts","webpack://xtermForReact/xterm/./src/browser/Lifecycle.ts","webpack://xtermForReact/xterm/./src/browser/Linkifier2.ts","webpack://xtermForReact/xterm/./src/browser/LocalizableStrings.ts","webpack://xtermForReact/xterm/./src/browser/OscLinkProvider.ts","webpack://xtermForReact/xterm/./src/browser/RenderDebouncer.ts","webpack://xtermForReact/xterm/./src/browser/ScreenDprMonitor.ts","webpack://xtermForReact/xterm/./src/browser/Terminal.ts","webpack://xtermForReact/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xtermForReact/xterm/./src/browser/Viewport.ts","webpack://xtermForReact/xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xtermForReact/xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xtermForReact/xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xtermForReact/xterm/./src/browser/input/CompositionHelper.ts","webpack://xtermForReact/xterm/./src/browser/input/Mouse.ts","webpack://xtermForReact/xterm/./src/browser/input/MoveToCell.ts","webpack://xtermForReact/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xtermForReact/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xtermForReact/xterm/./src/browser/renderer/shared/Constants.ts","webpack://xtermForReact/xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xtermForReact/xterm/./src/browser/selection/SelectionModel.ts","webpack://xtermForReact/xterm/./src/browser/services/CharSizeService.ts","webpack://xtermForReact/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xtermForReact/xterm/./src/browser/services/CoreBrowserService.ts","webpack://xtermForReact/xterm/./src/browser/services/MouseService.ts","webpack://xtermForReact/xterm/./src/browser/services/RenderService.ts","webpack://xtermForReact/xterm/./src/browser/services/SelectionService.ts","webpack://xtermForReact/xterm/./src/browser/services/Services.ts","webpack://xtermForReact/xterm/./src/browser/services/ThemeService.ts","webpack://xtermForReact/xterm/./src/common/CircularList.ts","webpack://xtermForReact/xterm/./src/common/Clone.ts","webpack://xtermForReact/xterm/./src/common/Color.ts","webpack://xtermForReact/xterm/./src/common/CoreTerminal.ts","webpack://xtermForReact/xterm/./src/common/EventEmitter.ts","webpack://xtermForReact/xterm/./src/common/InputHandler.ts","webpack://xtermForReact/xterm/./src/common/Lifecycle.ts","webpack://xtermForReact/xterm/./src/common/MultiKeyMap.ts","webpack://xtermForReact/xterm/./src/common/Platform.ts","webpack://xtermForReact/xterm/./src/common/SortedList.ts","webpack://xtermForReact/xterm/./src/common/TaskQueue.ts","webpack://xtermForReact/xterm/./src/common/WindowsMode.ts","webpack://xtermForReact/xterm/./src/common/buffer/AttributeData.ts","webpack://xtermForReact/xterm/./src/common/buffer/Buffer.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferLine.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferRange.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferReflow.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferSet.ts","webpack://xtermForReact/xterm/./src/common/buffer/CellData.ts","webpack://xtermForReact/xterm/./src/common/buffer/Constants.ts","webpack://xtermForReact/xterm/./src/common/buffer/Marker.ts","webpack://xtermForReact/xterm/./src/common/data/Charsets.ts","webpack://xtermForReact/xterm/./src/common/data/EscapeSequences.ts","webpack://xtermForReact/xterm/./src/common/input/Keyboard.ts","webpack://xtermForReact/xterm/./src/common/input/TextDecoder.ts","webpack://xtermForReact/xterm/./src/common/input/UnicodeV6.ts","webpack://xtermForReact/xterm/./src/common/input/WriteBuffer.ts","webpack://xtermForReact/xterm/./src/common/input/XParseColor.ts","webpack://xtermForReact/xterm/./src/common/parser/Constants.ts","webpack://xtermForReact/xterm/./src/common/parser/DcsParser.ts","webpack://xtermForReact/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xtermForReact/xterm/./src/common/parser/OscParser.ts","webpack://xtermForReact/xterm/./src/common/parser/Params.ts","webpack://xtermForReact/xterm/./src/common/public/AddonManager.ts","webpack://xtermForReact/xterm/./src/common/public/BufferApiView.ts","webpack://xtermForReact/xterm/./src/common/public/BufferLineApiView.ts","webpack://xtermForReact/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xtermForReact/xterm/./src/common/public/ParserApi.ts","webpack://xtermForReact/xterm/./src/common/public/UnicodeApi.ts","webpack://xtermForReact/xterm/./src/common/services/BufferService.ts","webpack://xtermForReact/xterm/./src/common/services/CharsetService.ts","webpack://xtermForReact/xterm/./src/common/services/CoreMouseService.ts","webpack://xtermForReact/xterm/./src/common/services/CoreService.ts","webpack://xtermForReact/xterm/./src/common/services/DecorationService.ts","webpack://xtermForReact/xterm/./src/common/services/InstantiationService.ts","webpack://xtermForReact/xterm/./src/common/services/LogService.ts","webpack://xtermForReact/xterm/./src/common/services/OptionsService.ts","webpack://xtermForReact/xterm/./src/common/services/OscLinkService.ts","webpack://xtermForReact/xterm/./src/common/services/ServiceRegistry.ts","webpack://xtermForReact/xterm/./src/common/services/Services.ts","webpack://xtermForReact/xterm/./src/common/services/UnicodeService.ts","webpack://xtermForReact/xterm/webpack/bootstrap","webpack://xtermForReact/xterm/./src/browser/public/Terminal.ts","webpack://xtermForReact/webpack/bootstrap","webpack://xtermForReact/webpack/runtime/compat get default export","webpack://xtermForReact/webpack/runtime/define property getters","webpack://xtermForReact/webpack/runtime/hasOwnProperty shorthand","webpack://xtermForReact/webpack/runtime/make namespace object","webpack://xtermForReact/webpack/runtime/nonce","webpack://xtermForReact/./node_modules/xterm/css/xterm.css?fab9","webpack://xtermForReact/./src/XTerm.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xtermForReact\"] = factory();\n\telse\n\t\troot[\"xtermForReact\"] = factory();\n})(this, function() {\nreturn ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/**\\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\\n * https://github.com/chjj/term.js\\n * @license MIT\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\n * Originally forked from (with the author's permission):\\n *   Fabrice Bellard's javascript vt100 for jslinux:\\n *   http://bellard.org/jslinux/\\n *   Copyright (c) 2011 Fabrice Bellard\\n *   The original design remains. The terminal itself\\n *   has been extended to include xterm CSI codes, among\\n *   other features.\\n */\\n\\n/**\\n *  Default styles for xterm.js\\n */\\n\\n.xterm {\\n    cursor: text;\\n    position: relative;\\n    user-select: none;\\n    -ms-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n.xterm.focus,\\n.xterm:focus {\\n    outline: none;\\n}\\n\\n.xterm .xterm-helpers {\\n    position: absolute;\\n    top: 0;\\n    /**\\n     * The z-index of the helpers must be higher than the canvases in order for\\n     * IMEs to appear on top.\\n     */\\n    z-index: 5;\\n}\\n\\n.xterm .xterm-helper-textarea {\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\\n    position: absolute;\\n    opacity: 0;\\n    left: -9999em;\\n    top: 0;\\n    width: 0;\\n    height: 0;\\n    z-index: -5;\\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\\n    white-space: nowrap;\\n    overflow: hidden;\\n    resize: none;\\n}\\n\\n.xterm .composition-view {\\n    /* TODO: Composition position got messed up somewhere */\\n    background: #000;\\n    color: #FFF;\\n    display: none;\\n    position: absolute;\\n    white-space: nowrap;\\n    z-index: 1;\\n}\\n\\n.xterm .composition-view.active {\\n    display: block;\\n}\\n\\n.xterm .xterm-viewport {\\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\\n    background-color: #000;\\n    overflow-y: scroll;\\n    cursor: default;\\n    position: absolute;\\n    right: 0;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n}\\n\\n.xterm .xterm-screen {\\n    position: relative;\\n}\\n\\n.xterm .xterm-screen canvas {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n}\\n\\n.xterm .xterm-scroll-area {\\n    visibility: hidden;\\n}\\n\\n.xterm-char-measure-element {\\n    display: inline-block;\\n    visibility: hidden;\\n    position: absolute;\\n    top: 0;\\n    left: -9999em;\\n    line-height: normal;\\n}\\n\\n.xterm.enable-mouse-events {\\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\\n    cursor: default;\\n}\\n\\n.xterm.xterm-cursor-pointer,\\n.xterm .xterm-cursor-pointer {\\n    cursor: pointer;\\n}\\n\\n.xterm.column-select.focus {\\n    /* Column selection mode */\\n    cursor: crosshair;\\n}\\n\\n.xterm .xterm-accessibility,\\n.xterm .xterm-message {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n    z-index: 10;\\n    color: transparent;\\n}\\n\\n.xterm .live-region {\\n    position: absolute;\\n    left: -9999px;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden;\\n}\\n\\n.xterm-dim {\\n    opacity: 0.5;\\n}\\n\\n.xterm-underline-1 { text-decoration: underline; }\\n.xterm-underline-2 { text-decoration: double underline; }\\n.xterm-underline-3 { text-decoration: wavy underline; }\\n.xterm-underline-4 { text-decoration: dotted underline; }\\n.xterm-underline-5 { text-decoration: dashed underline; }\\n\\n.xterm-strikethrough {\\n    text-decoration: line-through;\\n}\\n\\n.xterm-screen .xterm-decoration-container .xterm-decoration {\\n\\tz-index: 6;\\n\\tposition: absolute;\\n}\\n\\n.xterm-decoration-overview-ruler {\\n    z-index: 7;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    pointer-events: none;\\n}\\n\\n.xterm-decoration-top {\\n    z-index: 2;\\n    position: relative;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/xterm/css/xterm.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BE;;AAEF;;EAEE;;AAEF;IACI,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,qBAAqB;IACrB,yBAAyB;AAC7B;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN;;;MAGE;IACF,UAAU;AACd;;AAEA;IACI,UAAU;IACV,SAAS;IACT,SAAS;IACT,uFAAuF;IACvF,kBAAkB;IAClB,UAAU;IACV,aAAa;IACb,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,sFAAsF;IACtF,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,uDAAuD;IACvD,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,gFAAgF;IAChF,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,QAAQ;IACR,OAAO;IACP,MAAM;IACN,SAAS;AACb;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;AACV;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,MAAM;IACN,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,oFAAoF;IACpF,eAAe;AACnB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,iBAAiB;AACrB;;AAEA;;IAEI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA,qBAAqB,0BAA0B,EAAE;AACjD,qBAAqB,iCAAiC,EAAE;AACxD,qBAAqB,+BAA+B,EAAE;AACtD,qBAAqB,iCAAiC,EAAE;AACxD,qBAAqB,iCAAiC,EAAE;;AAExD;IACI,6BAA6B;AACjC;;AAEA;CACC,UAAU;CACV,kBAAkB;AACnB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB\",\"sourcesContent\":[\"/**\\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\\n * https://github.com/chjj/term.js\\n * @license MIT\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\n * Originally forked from (with the author's permission):\\n *   Fabrice Bellard's javascript vt100 for jslinux:\\n *   http://bellard.org/jslinux/\\n *   Copyright (c) 2011 Fabrice Bellard\\n *   The original design remains. The terminal itself\\n *   has been extended to include xterm CSI codes, among\\n *   other features.\\n */\\n\\n/**\\n *  Default styles for xterm.js\\n */\\n\\n.xterm {\\n    cursor: text;\\n    position: relative;\\n    user-select: none;\\n    -ms-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n.xterm.focus,\\n.xterm:focus {\\n    outline: none;\\n}\\n\\n.xterm .xterm-helpers {\\n    position: absolute;\\n    top: 0;\\n    /**\\n     * The z-index of the helpers must be higher than the canvases in order for\\n     * IMEs to appear on top.\\n     */\\n    z-index: 5;\\n}\\n\\n.xterm .xterm-helper-textarea {\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\\n    position: absolute;\\n    opacity: 0;\\n    left: -9999em;\\n    top: 0;\\n    width: 0;\\n    height: 0;\\n    z-index: -5;\\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\\n    white-space: nowrap;\\n    overflow: hidden;\\n    resize: none;\\n}\\n\\n.xterm .composition-view {\\n    /* TODO: Composition position got messed up somewhere */\\n    background: #000;\\n    color: #FFF;\\n    display: none;\\n    position: absolute;\\n    white-space: nowrap;\\n    z-index: 1;\\n}\\n\\n.xterm .composition-view.active {\\n    display: block;\\n}\\n\\n.xterm .xterm-viewport {\\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\\n    background-color: #000;\\n    overflow-y: scroll;\\n    cursor: default;\\n    position: absolute;\\n    right: 0;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n}\\n\\n.xterm .xterm-screen {\\n    position: relative;\\n}\\n\\n.xterm .xterm-screen canvas {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n}\\n\\n.xterm .xterm-scroll-area {\\n    visibility: hidden;\\n}\\n\\n.xterm-char-measure-element {\\n    display: inline-block;\\n    visibility: hidden;\\n    position: absolute;\\n    top: 0;\\n    left: -9999em;\\n    line-height: normal;\\n}\\n\\n.xterm.enable-mouse-events {\\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\\n    cursor: default;\\n}\\n\\n.xterm.xterm-cursor-pointer,\\n.xterm .xterm-cursor-pointer {\\n    cursor: pointer;\\n}\\n\\n.xterm.column-select.focus {\\n    /* Column selection mode */\\n    cursor: crosshair;\\n}\\n\\n.xterm .xterm-accessibility,\\n.xterm .xterm-message {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n    z-index: 10;\\n    color: transparent;\\n}\\n\\n.xterm .live-region {\\n    position: absolute;\\n    left: -9999px;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden;\\n}\\n\\n.xterm-dim {\\n    opacity: 0.5;\\n}\\n\\n.xterm-underline-1 { text-decoration: underline; }\\n.xterm-underline-2 { text-decoration: double underline; }\\n.xterm-underline-3 { text-decoration: wavy underline; }\\n.xterm-underline-4 { text-decoration: dotted underline; }\\n.xterm-underline-5 { text-decoration: dashed underline; }\\n\\n.xterm-strikethrough {\\n    text-decoration: line-through;\\n}\\n\\n.xterm-screen .xterm-decoration-container .xterm-decoration {\\n\\tz-index: 6;\\n\\tposition: absolute;\\n}\\n\\n.xterm-decoration-overview-ruler {\\n    z-index: 7;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    pointer-events: none;\\n}\\n\\n.xterm-decoration-top {\\n    z-index: 2;\\n    position: relative;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./xterm.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./xterm.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport 'xterm/css/xterm.css'\n\n// We are using these as types.\n// eslint-disable-next-line no-unused-vars\nimport { Terminal, ITerminalOptions, ITerminalAddon } from 'xterm'\n\ninterface IProps {\n\t/**\n\t * Class name to add to the terminal container.\n\t */\n\tclassName?: string\n\n\t/**\n\t * Options to initialize the terminal with.\n\t */\n\toptions?: ITerminalOptions\n\n\t/**\n\t * An array of XTerm addons to load along with the terminal.\n\t */\n\taddons?: Array<ITerminalAddon>\n\n\t/**\n\t * Adds an event listener for when a binary event fires. This is used to\n\t * enable non UTF-8 conformant binary messages to be sent to the backend.\n\t * Currently this is only used for a certain type of mouse reports that\n\t * happen to be not UTF-8 compatible.\n\t * The event value is a JS string, pass it to the underlying pty as\n\t * binary data, e.g. `pty.write(Buffer.from(data, 'binary'))`.\n\t */\n\tonBinary?(data: string): void\n\n\t/**\n\t * Adds an event listener for the cursor moves.\n\t */\n\tonCursorMove?(): void\n\n\t/**\n\t * Adds an event listener for when a data event fires. This happens for\n\t * example when the user types or pastes into the terminal. The event value\n\t * is whatever `string` results, in a typical setup, this should be passed\n\t * on to the backing pty.\n\t */\n\tonData?(data: string): void\n\n\t/**\n\t * Adds an event listener for when a key is pressed. The event value contains the\n\t * string that will be sent in the data event as well as the DOM event that\n\t * triggered it.\n\t */\n\tonKey?(event: { key: string; domEvent: KeyboardEvent }): void\n\n\t/**\n\t * Adds an event listener for when a line feed is added.\n\t */\n\tonLineFeed?(): void\n\n\t/**\n\t * Adds an event listener for when a scroll occurs. The event value is the\n\t * new position of the viewport.\n\t * @returns an `IDisposable` to stop listening.\n\t */\n\tonScroll?(newPosition: number): void\n\n\t/**\n\t * Adds an event listener for when a selection change occurs.\n\t */\n\tonSelectionChange?(): void\n\n\t/**\n\t * Adds an event listener for when rows are rendered. The event value\n\t * contains the start row and end rows of the rendered area (ranges from `0`\n\t * to `Terminal.rows - 1`).\n\t */\n\tonRender?(event: { start: number; end: number }): void\n\n\t/**\n\t * Adds an event listener for when the terminal is resized. The event value\n\t * contains the new size.\n\t */\n\tonResize?(event: { cols: number; rows: number }): void\n\n\t/**\n\t * Adds an event listener for when an OSC 0 or OSC 2 title change occurs.\n\t * The event value is the new title.\n\t */\n\tonTitleChange?(newTitle: string): void\n\n\t/**\n\t * Attaches a custom key event handler which is run before keys are\n\t * processed, giving consumers of xterm.js ultimate control as to what keys\n\t * should be processed by the terminal and what keys should not.\n\t *\n\t * @param event The custom KeyboardEvent handler to attach.\n\t * This is a function that takes a KeyboardEvent, allowing consumers to stop\n\t * propagation and/or prevent the default action. The function returns\n\t * whether the event should be processed by xterm.js.\n\t */\n\tcustomKeyEventHandler?(event: KeyboardEvent): boolean\n}\n\nexport default class Xterm extends React.Component<IProps> {\n\t/**\n\t * The ref for the containing element.\n\t */\n\tterminalRef: React.RefObject<HTMLDivElement>\n\n\t/**\n\t * XTerm.js Terminal object.\n\t */\n\tterminal!: Terminal // This is assigned in the setupTerminal() which is called from the constructor\n\n\tstatic propTypes = {\n\t\tclassName: PropTypes.string,\n\t\toptions: PropTypes.object,\n\t\taddons: PropTypes.array,\n\t\tonBinary: PropTypes.func,\n\t\tonCursorMove: PropTypes.func,\n\t\tonData: PropTypes.func,\n\t\tonKey: PropTypes.func,\n\t\tonLineFeed: PropTypes.func,\n\t\tonScroll: PropTypes.func,\n\t\tonSelectionChange: PropTypes.func,\n\t\tonRender: PropTypes.func,\n\t\tonResize: PropTypes.func,\n\t\tonTitleChange: PropTypes.func,\n\t\tcustomKeyEventHandler: PropTypes.func,\n\t}\n\n\tconstructor(props: IProps) {\n\t\tsuper(props)\n\n\t\tthis.terminalRef = React.createRef()\n\n\t\t// Bind Methods\n\t\tthis.onData = this.onData.bind(this)\n\t\tthis.onCursorMove = this.onCursorMove.bind(this)\n\t\tthis.onKey = this.onKey.bind(this)\n\t\tthis.onBinary = this.onBinary.bind(this)\n\t\tthis.onLineFeed = this.onLineFeed.bind(this)\n\t\tthis.onScroll = this.onScroll.bind(this)\n\t\tthis.onSelectionChange = this.onSelectionChange.bind(this)\n\t\tthis.onRender = this.onRender.bind(this)\n\t\tthis.onResize = this.onResize.bind(this)\n\t\tthis.onTitleChange = this.onTitleChange.bind(this)\n\n\t\tthis.setupTerminal()\n\t}\n\n\tsetupTerminal() {\n\t\t// Setup the XTerm terminal.\n\t\tthis.terminal = new Terminal(this.props.options)\n\n\t\t// Load addons if the prop exists.\n\t\tif (this.props.addons) {\n\t\t\tthis.props.addons.forEach((addon) => {\n\t\t\t\tthis.terminal.loadAddon(addon)\n\t\t\t})\n\t\t}\n\n\t\t// Create Listeners\n\t\tthis.terminal.onBinary(this.onBinary)\n\t\tthis.terminal.onCursorMove(this.onCursorMove)\n\t\tthis.terminal.onData(this.onData)\n\t\tthis.terminal.onKey(this.onKey)\n\t\tthis.terminal.onLineFeed(this.onLineFeed)\n\t\tthis.terminal.onScroll(this.onScroll)\n\t\tthis.terminal.onSelectionChange(this.onSelectionChange)\n\t\tthis.terminal.onRender(this.onRender)\n\t\tthis.terminal.onResize(this.onResize)\n\t\tthis.terminal.onTitleChange(this.onTitleChange)\n\n\t\t// Add Custom Key Event Handler\n\t\tif (this.props.customKeyEventHandler) {\n\t\t\tthis.terminal.attachCustomKeyEventHandler(this.props.customKeyEventHandler)\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.terminalRef.current) {\n\t\t\t// Creates the terminal within the container element.\n\t\t\tthis.terminal.open(this.terminalRef.current)\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// When the component unmounts dispose of the terminal and all of its listeners.\n\t\tthis.terminal.dispose()\n\t}\n\n\tprivate onBinary(data: string) {\n\t\tif (this.props.onBinary) this.props.onBinary(data)\n\t}\n\n\tprivate onCursorMove() {\n\t\tif (this.props.onCursorMove) this.props.onCursorMove()\n\t}\n\n\tprivate onData(data: string) {\n\t\tif (this.props.onData) this.props.onData(data)\n\t}\n\n\tprivate onKey(event: { key: string; domEvent: KeyboardEvent }) {\n\t\tif (this.props.onKey) this.props.onKey(event)\n\t}\n\n\tprivate onLineFeed() {\n\t\tif (this.props.onLineFeed) this.props.onLineFeed()\n\t}\n\n\tprivate onScroll(newPosition: number) {\n\t\tif (this.props.onScroll) this.props.onScroll(newPosition)\n\t}\n\n\tprivate onSelectionChange() {\n\t\tif (this.props.onSelectionChange) this.props.onSelectionChange()\n\t}\n\n\tprivate onRender(event: { start: number; end: number }) {\n\t\tif (this.props.onRender) this.props.onRender(event)\n\t}\n\n\tprivate onResize(event: { cols: number; rows: number }) {\n\t\tif (this.props.onResize) this.props.onResize(event)\n\t}\n\n\tprivate onTitleChange(newTitle: string) {\n\t\tif (this.props.onTitleChange) this.props.onTitleChange(newTitle)\n\t}\n\n\trender() {\n\t\treturn <div className={this.props.className} ref={this.terminalRef} />\n\t}\n}\n"],"names":["root","factory","exports","module","define","amd","this","___CSS_LOADER_EXPORT___","push","id","cssWithMappingToString","list","toString","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","l","Symbol","for","B","iterator","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","Object","assign","D","E","a","b","e","context","refs","updater","F","G","prototype","isReactComponent","setState","forceUpdate","H","constructor","isPureReactComponent","Array","isArray","J","hasOwnProperty","K","current","L","key","ref","__self","__source","Component","createElement","d","c","h","call","g","arguments","children","f","m","defaultProps","$$typeof","type","_owner","createRef","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","appendChild","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","self","AccessibilityManager","Disposable","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","classList","add","tabIndex","_rowContainer","_rowElements","rows","_createAccessibilityTreeNode","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","insertAdjacentElement","register","onResize","_handleResize","onRender","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","boundaryElement","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","shift","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","setTimeout","keyChar","test","refresh","setSize","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","cell","height","width","canvas","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","handler","disposed","dispose","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","t","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","oldEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","str","rpt","targetX","rowDifference","currX","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","_getCurrentLinkId","wasPaused","DEBUG","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","isProtected","_disposables","unregister","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","setter","desc","defineProperty","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","serviceRegistry","decorator","storeServiceDependency","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity","__esModule","definition","o","enumerable","prop","toStringTag","nc","_super","Xterm","_this","terminalRef","React","setupTerminal","__extends","addons","componentDidMount","componentWillUnmount","newPosition","newTitle","render","className","propTypes"],"sourceRoot":""}