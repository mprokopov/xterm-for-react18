{"version":3,"file":"bundle.js","mappings":"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AqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,IAAI,IAAqC;AACzC,6BAA6B,mBAAO,CAAC,yFAA4B;AACjE;AACA,YAAY,mBAAO,CAAC,uDAAW;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;;AAEA;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,kDAAU;AAChC,aAAa,mBAAO,CAAC,4DAAe;;AAEpC,2BAA2B,mBAAO,CAAC,yFAA4B;AAC/D,UAAU,mBAAO,CAAC,uDAAW;AAC7B,qBAAqB,mBAAO,CAAC,qEAAkB;;AAE/C;;AAEA,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,8BAA8B;AAC9B,QAAQ;AACR;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B;AAC5B,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,SAAS,KAAqC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,IAAqC;AAC/C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,KAAqC,4FAA4F,CAAM;AAC7I;AACA;;AAEA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iHAAiH;AACjH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACjmBA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,IAAqC;AACzC,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,uFAA2B;AACtD,EAAE,KAAK,EAIN;;;;;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;;;;;;;;;;;ACXA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,sBAAsB;AACtB,uBAAuB;AACvB,uBAAuB;AACvB,eAAe;AACf,kBAAkB;AAClB,gBAAgB;AAChB,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,gBAAgB;AAChB,kBAAkB;AAClB,gBAAgB;AAChB,mBAAmB;AACnB,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB,iBAAiB;AACjB,oBAAoB;AACpB,kBAAkB;AAClB,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB,kBAAkB;AAClB,oBAAoB;AACpB,kBAAkB;AAClB,0BAA0B;AAC1B,cAAc;AACd,GAAG;AACH;;;;;;;;;;;;ACpLa;;AAEb,IAAI,KAAqC,EAAE,EAE1C,CAAC;AACF,EAAE,gIAAyD;AAC3D;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,IAAI,IAAqC;AACzC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,4BAA4B;AAC5B;AACA,qCAAqC;;AAErC,gCAAgC;AAChC;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6FAA6F,aAAa;AAC1G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,eAAe;AAChH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,KAAK,GAAG;;AAER,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8MAA8M;;AAE9M;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,YAAY;AACzB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B;;AAE1B,2BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,WAAW,WAAW;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA,oDAAoD;;AAEpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,eAAe;AAC1B,WAAW,GAAG;AACd,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;;AAEhB,uBAAuB,kBAAkB;;AAEzC;AACA,yBAAyB;;AAEzB,4BAA4B;AAC5B;AACA;;AAEA,gCAAgC;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,qIAAqI,yCAAyC;AAC9K;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,kBAAkB;AAC7B,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA,SAAS;AACT,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,kBAAkB;AAC7B,WAAW,GAAG;AACd;AACA;AACA;AACA,wCAAwC;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,cAAc;AAC1B;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,0CAA0C;AAC1C;;AAEA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,oCAAoC;AACpC;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,+CAA+C,IAAI;AACnD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,sBAAsB;AACtB;AACA,SAAS;AACT,uBAAuB;AACvB;AACA,SAAS;AACT,uBAAuB;AACvB;AACA,SAAS;AACT,wBAAwB;AACxB;AACA,SAAS;AACT,wBAAwB;AACxB;AACA,SAAS;AACT,iCAAiC;AACjC;AACA,SAAS;AACT,2BAA2B;AAC3B;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;;AAE3D;AACA;;AAEA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,gFAAgF;AAChF;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;;AAGlB;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2HAA2H;AAC3H;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA,oEAAoE;;AAEpE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,GAAG;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,2DAA2D;AAC3D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,GAAG;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,4CAA4C;;AAE5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;;AAEA,0OAA0O;AAC1O;AACA,WAAW;AACX;AACA;;AAEA;AACA,MAAM;AACN,gCAAgC;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,qBAAqB;AACrB,kBAAkB;AAClB,gBAAgB;AAChB,0DAA0D;AAC1D,oBAAoB;AACpB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,iBAAiB;AACjB,kBAAkB;AAClB,sBAAsB;AACtB,YAAY;AACZ,YAAY;AACZ,uBAAuB;AACvB,oBAAoB;AACpB,mBAAmB;AACnB,kBAAkB;AAClB,qBAAqB;AACrB,wBAAwB;AACxB,iBAAiB;AACjB,aAAa;AACb,2BAA2B;AAC3B,0BAA0B;AAC1B,uBAAuB;AACvB,eAAe;AACf,kBAAkB;AAClB,cAAc;AACd,gBAAgB;AAChB,4BAA4B;AAC5B,qBAAqB;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AClrFa;;AAEb,IAAI,KAAqC,EAAE,EAE1C,CAAC;AACF,EAAE,uHAAsD;AACxD;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;CCbA,SAA2CgD,EAAMC,GAChD,GAAsB,IAAyBE,CAC9CA,OAAOD,QAAUD,SACb,aAML,CATD,CASGO,MAAM,WACT,8HCLA,gBAGA,UACA,U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,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAA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","sources":["webpack://xtermForReact/webpack/universalModuleDefinition","webpack://xtermForReact/./src/XTerm.tsx","webpack://xtermForReact/./node_modules/xterm/css/xterm.css","webpack://xtermForReact/./node_modules/css-loader/dist/runtime/api.js","webpack://xtermForReact/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://xtermForReact/./node_modules/object-assign/index.js","webpack://xtermForReact/./node_modules/prop-types/checkPropTypes.js","webpack://xtermForReact/./node_modules/prop-types/factoryWithTypeCheckers.js","webpack://xtermForReact/./node_modules/prop-types/index.js","webpack://xtermForReact/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://xtermForReact/./node_modules/prop-types/lib/has.js","webpack://xtermForReact/./node_modules/react-is/cjs/react-is.development.js","webpack://xtermForReact/./node_modules/react-is/index.js","webpack://xtermForReact/./node_modules/react/cjs/react.development.js","webpack://xtermForReact/./node_modules/react/index.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://xtermForReact/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://xtermForReact/xterm/webpack/universalModuleDefinition","webpack://xtermForReact/xterm/./src/browser/AccessibilityManager.ts","webpack://xtermForReact/xterm/./src/browser/Clipboard.ts","webpack://xtermForReact/xterm/./src/browser/ColorContrastCache.ts","webpack://xtermForReact/xterm/./src/browser/Dom.ts","webpack://xtermForReact/xterm/./src/browser/Lifecycle.ts","webpack://xtermForReact/xterm/./src/browser/Linkifier2.ts","webpack://xtermForReact/xterm/./src/browser/LocalizableStrings.ts","webpack://xtermForReact/xterm/./src/browser/OscLinkProvider.ts","webpack://xtermForReact/xterm/./src/browser/RenderDebouncer.ts","webpack://xtermForReact/xterm/./src/browser/ScreenDprMonitor.ts","webpack://xtermForReact/xterm/./src/browser/Terminal.ts","webpack://xtermForReact/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xtermForReact/xterm/./src/browser/Viewport.ts","webpack://xtermForReact/xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xtermForReact/xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xtermForReact/xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xtermForReact/xterm/./src/browser/input/CompositionHelper.ts","webpack://xtermForReact/xterm/./src/browser/input/Mouse.ts","webpack://xtermForReact/xterm/./src/browser/input/MoveToCell.ts","webpack://xtermForReact/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xtermForReact/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xtermForReact/xterm/./src/browser/renderer/shared/Constants.ts","webpack://xtermForReact/xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xtermForReact/xterm/./src/browser/selection/SelectionModel.ts","webpack://xtermForReact/xterm/./src/browser/services/CharSizeService.ts","webpack://xtermForReact/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xtermForReact/xterm/./src/browser/services/CoreBrowserService.ts","webpack://xtermForReact/xterm/./src/browser/services/MouseService.ts","webpack://xtermForReact/xterm/./src/browser/services/RenderService.ts","webpack://xtermForReact/xterm/./src/browser/services/SelectionService.ts","webpack://xtermForReact/xterm/./src/browser/services/Services.ts","webpack://xtermForReact/xterm/./src/browser/services/ThemeService.ts","webpack://xtermForReact/xterm/./src/common/CircularList.ts","webpack://xtermForReact/xterm/./src/common/Clone.ts","webpack://xtermForReact/xterm/./src/common/Color.ts","webpack://xtermForReact/xterm/./src/common/CoreTerminal.ts","webpack://xtermForReact/xterm/./src/common/EventEmitter.ts","webpack://xtermForReact/xterm/./src/common/InputHandler.ts","webpack://xtermForReact/xterm/./src/common/Lifecycle.ts","webpack://xtermForReact/xterm/./src/common/MultiKeyMap.ts","webpack://xtermForReact/xterm/./src/common/Platform.ts","webpack://xtermForReact/xterm/./src/common/SortedList.ts","webpack://xtermForReact/xterm/./src/common/TaskQueue.ts","webpack://xtermForReact/xterm/./src/common/WindowsMode.ts","webpack://xtermForReact/xterm/./src/common/buffer/AttributeData.ts","webpack://xtermForReact/xterm/./src/common/buffer/Buffer.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferLine.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferRange.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferReflow.ts","webpack://xtermForReact/xterm/./src/common/buffer/BufferSet.ts","webpack://xtermForReact/xterm/./src/common/buffer/CellData.ts","webpack://xtermForReact/xterm/./src/common/buffer/Constants.ts","webpack://xtermForReact/xterm/./src/common/buffer/Marker.ts","webpack://xtermForReact/xterm/./src/common/data/Charsets.ts","webpack://xtermForReact/xterm/./src/common/data/EscapeSequences.ts","webpack://xtermForReact/xterm/./src/common/input/Keyboard.ts","webpack://xtermForReact/xterm/./src/common/input/TextDecoder.ts","webpack://xtermForReact/xterm/./src/common/input/UnicodeV6.ts","webpack://xtermForReact/xterm/./src/common/input/WriteBuffer.ts","webpack://xtermForReact/xterm/./src/common/input/XParseColor.ts","webpack://xtermForReact/xterm/./src/common/parser/Constants.ts","webpack://xtermForReact/xterm/./src/common/parser/DcsParser.ts","webpack://xtermForReact/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xtermForReact/xterm/./src/common/parser/OscParser.ts","webpack://xtermForReact/xterm/./src/common/parser/Params.ts","webpack://xtermForReact/xterm/./src/common/public/AddonManager.ts","webpack://xtermForReact/xterm/./src/common/public/BufferApiView.ts","webpack://xtermForReact/xterm/./src/common/public/BufferLineApiView.ts","webpack://xtermForReact/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xtermForReact/xterm/./src/common/public/ParserApi.ts","webpack://xtermForReact/xterm/./src/common/public/UnicodeApi.ts","webpack://xtermForReact/xterm/./src/common/services/BufferService.ts","webpack://xtermForReact/xterm/./src/common/services/CharsetService.ts","webpack://xtermForReact/xterm/./src/common/services/CoreMouseService.ts","webpack://xtermForReact/xterm/./src/common/services/CoreService.ts","webpack://xtermForReact/xterm/./src/common/services/DecorationService.ts","webpack://xtermForReact/xterm/./src/common/services/InstantiationService.ts","webpack://xtermForReact/xterm/./src/common/services/LogService.ts","webpack://xtermForReact/xterm/./src/common/services/OptionsService.ts","webpack://xtermForReact/xterm/./src/common/services/OscLinkService.ts","webpack://xtermForReact/xterm/./src/common/services/ServiceRegistry.ts","webpack://xtermForReact/xterm/./src/common/services/Services.ts","webpack://xtermForReact/xterm/./src/common/services/UnicodeService.ts","webpack://xtermForReact/xterm/webpack/bootstrap","webpack://xtermForReact/xterm/./src/browser/public/Terminal.ts","webpack://xtermForReact/./node_modules/xterm/css/xterm.css?fab9","webpack://xtermForReact/webpack/bootstrap","webpack://xtermForReact/webpack/runtime/compat get default export","webpack://xtermForReact/webpack/runtime/define property getters","webpack://xtermForReact/webpack/runtime/hasOwnProperty shorthand","webpack://xtermForReact/webpack/runtime/make namespace object","webpack://xtermForReact/webpack/runtime/node module decorator","webpack://xtermForReact/webpack/runtime/nonce","webpack://xtermForReact/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xtermForReact\"] = factory();\n\telse\n\t\troot[\"xtermForReact\"] = factory();\n})(this, function() {\nreturn ","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport 'xterm/css/xterm.css'\n\n// We are using these as types.\n// eslint-disable-next-line no-unused-vars\nimport { Terminal, ITerminalOptions, ITerminalAddon } from 'xterm'\n\ninterface IProps {\n\t/**\n\t * Class name to add to the terminal container.\n\t */\n\tclassName?: string\n\n\t/**\n\t * Options to initialize the terminal with.\n\t */\n\toptions?: ITerminalOptions\n\n\t/**\n\t * An array of XTerm addons to load along with the terminal.\n\t */\n\taddons?: Array<ITerminalAddon>\n\n\t/**\n\t * Adds an event listener for when a binary event fires. This is used to\n\t * enable non UTF-8 conformant binary messages to be sent to the backend.\n\t * Currently this is only used for a certain type of mouse reports that\n\t * happen to be not UTF-8 compatible.\n\t * The event value is a JS string, pass it to the underlying pty as\n\t * binary data, e.g. `pty.write(Buffer.from(data, 'binary'))`.\n\t */\n\tonBinary?(data: string): void\n\n\t/**\n\t * Adds an event listener for the cursor moves.\n\t */\n\tonCursorMove?(): void\n\n\t/**\n\t * Adds an event listener for when a data event fires. This happens for\n\t * example when the user types or pastes into the terminal. The event value\n\t * is whatever `string` results, in a typical setup, this should be passed\n\t * on to the backing pty.\n\t */\n\tonData?(data: string): void\n\n\t/**\n\t * Adds an event listener for when a key is pressed. The event value contains the\n\t * string that will be sent in the data event as well as the DOM event that\n\t * triggered it.\n\t */\n\tonKey?(event: { key: string; domEvent: KeyboardEvent }): void\n\n\t/**\n\t * Adds an event listener for when a line feed is added.\n\t */\n\tonLineFeed?(): void\n\n\t/**\n\t * Adds an event listener for when a scroll occurs. The event value is the\n\t * new position of the viewport.\n\t * @returns an `IDisposable` to stop listening.\n\t */\n\tonScroll?(newPosition: number): void\n\n\t/**\n\t * Adds an event listener for when a selection change occurs.\n\t */\n\tonSelectionChange?(): void\n\n\t/**\n\t * Adds an event listener for when rows are rendered. The event value\n\t * contains the start row and end rows of the rendered area (ranges from `0`\n\t * to `Terminal.rows - 1`).\n\t */\n\tonRender?(event: { start: number; end: number }): void\n\n\t/**\n\t * Adds an event listener for when the terminal is resized. The event value\n\t * contains the new size.\n\t */\n\tonResize?(event: { cols: number; rows: number }): void\n\n\t/**\n\t * Adds an event listener for when an OSC 0 or OSC 2 title change occurs.\n\t * The event value is the new title.\n\t */\n\tonTitleChange?(newTitle: string): void\n\n\t/**\n\t * Attaches a custom key event handler which is run before keys are\n\t * processed, giving consumers of xterm.js ultimate control as to what keys\n\t * should be processed by the terminal and what keys should not.\n\t *\n\t * @param event The custom KeyboardEvent handler to attach.\n\t * This is a function that takes a KeyboardEvent, allowing consumers to stop\n\t * propagation and/or prevent the default action. The function returns\n\t * whether the event should be processed by xterm.js.\n\t */\n\tcustomKeyEventHandler?(event: KeyboardEvent): boolean\n}\n\nexport default class Xterm extends React.Component<IProps> {\n\t/**\n\t * The ref for the containing element.\n\t */\n\tterminalRef: React.RefObject<HTMLDivElement>\n\n\t/**\n\t * XTerm.js Terminal object.\n\t */\n\tterminal!: Terminal // This is assigned in the setupTerminal() which is called from the constructor\n\n\tstatic propTypes = {\n\t\tclassName: PropTypes.string,\n\t\toptions: PropTypes.object,\n\t\taddons: PropTypes.array,\n\t\tonBinary: PropTypes.func,\n\t\tonCursorMove: PropTypes.func,\n\t\tonData: PropTypes.func,\n\t\tonKey: PropTypes.func,\n\t\tonLineFeed: PropTypes.func,\n\t\tonScroll: PropTypes.func,\n\t\tonSelectionChange: PropTypes.func,\n\t\tonRender: PropTypes.func,\n\t\tonResize: PropTypes.func,\n\t\tonTitleChange: PropTypes.func,\n\t\tcustomKeyEventHandler: PropTypes.func,\n\t}\n\n\tconstructor(props: IProps) {\n\t\tsuper(props)\n\n\t\tthis.terminalRef = React.createRef()\n\n\t\t// Bind Methods\n\t\tthis.onData = this.onData.bind(this)\n\t\tthis.onCursorMove = this.onCursorMove.bind(this)\n\t\tthis.onKey = this.onKey.bind(this)\n\t\tthis.onBinary = this.onBinary.bind(this)\n\t\tthis.onLineFeed = this.onLineFeed.bind(this)\n\t\tthis.onScroll = this.onScroll.bind(this)\n\t\tthis.onSelectionChange = this.onSelectionChange.bind(this)\n\t\tthis.onRender = this.onRender.bind(this)\n\t\tthis.onResize = this.onResize.bind(this)\n\t\tthis.onTitleChange = this.onTitleChange.bind(this)\n\n\t\tthis.setupTerminal()\n\t}\n\n\tsetupTerminal() {\n\t\t// Setup the XTerm terminal.\n\t\tthis.terminal = new Terminal(this.props.options)\n\n\t\t// Load addons if the prop exists.\n\t\tif (this.props.addons) {\n\t\t\tthis.props.addons.forEach((addon) => {\n\t\t\t\tthis.terminal.loadAddon(addon)\n\t\t\t})\n\t\t}\n\n\t\t// Create Listeners\n\t\tthis.terminal.onBinary(this.onBinary)\n\t\tthis.terminal.onCursorMove(this.onCursorMove)\n\t\tthis.terminal.onData(this.onData)\n\t\tthis.terminal.onKey(this.onKey)\n\t\tthis.terminal.onLineFeed(this.onLineFeed)\n\t\tthis.terminal.onScroll(this.onScroll)\n\t\tthis.terminal.onSelectionChange(this.onSelectionChange)\n\t\tthis.terminal.onRender(this.onRender)\n\t\tthis.terminal.onResize(this.onResize)\n\t\tthis.terminal.onTitleChange(this.onTitleChange)\n\n\t\t// Add Custom Key Event Handler\n\t\tif (this.props.customKeyEventHandler) {\n\t\t\tthis.terminal.attachCustomKeyEventHandler(this.props.customKeyEventHandler)\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.terminalRef.current) {\n\t\t\t// Creates the terminal within the container element.\n\t\t\tthis.terminal.open(this.terminalRef.current)\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// When the component unmounts dispose of the terminal and all of its listeners.\n\t\tthis.terminal.dispose()\n\t}\n\n\tprivate onBinary(data: string) {\n\t\tif (this.props.onBinary) this.props.onBinary(data)\n\t}\n\n\tprivate onCursorMove() {\n\t\tif (this.props.onCursorMove) this.props.onCursorMove()\n\t}\n\n\tprivate onData(data: string) {\n\t\tif (this.props.onData) this.props.onData(data)\n\t}\n\n\tprivate onKey(event: { key: string; domEvent: KeyboardEvent }) {\n\t\tif (this.props.onKey) this.props.onKey(event)\n\t}\n\n\tprivate onLineFeed() {\n\t\tif (this.props.onLineFeed) this.props.onLineFeed()\n\t}\n\n\tprivate onScroll(newPosition: number) {\n\t\tif (this.props.onScroll) this.props.onScroll(newPosition)\n\t}\n\n\tprivate onSelectionChange() {\n\t\tif (this.props.onSelectionChange) this.props.onSelectionChange()\n\t}\n\n\tprivate onRender(event: { start: number; end: number }) {\n\t\tif (this.props.onRender) this.props.onRender(event)\n\t}\n\n\tprivate onResize(event: { cols: number; rows: number }) {\n\t\tif (this.props.onResize) this.props.onResize(event)\n\t}\n\n\tprivate onTitleChange(newTitle: string) {\n\t\tif (this.props.onTitleChange) this.props.onTitleChange(newTitle)\n\t}\n\n\trender() {\n\t\treturn <div className={this.props.className} ref={this.terminalRef} />\n\t}\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/**\\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\\n * https://github.com/chjj/term.js\\n * @license MIT\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\n * Originally forked from (with the author's permission):\\n *   Fabrice Bellard's javascript vt100 for jslinux:\\n *   http://bellard.org/jslinux/\\n *   Copyright (c) 2011 Fabrice Bellard\\n *   The original design remains. The terminal itself\\n *   has been extended to include xterm CSI codes, among\\n *   other features.\\n */\\n\\n/**\\n *  Default styles for xterm.js\\n */\\n\\n.xterm {\\n    cursor: text;\\n    position: relative;\\n    user-select: none;\\n    -ms-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n.xterm.focus,\\n.xterm:focus {\\n    outline: none;\\n}\\n\\n.xterm .xterm-helpers {\\n    position: absolute;\\n    top: 0;\\n    /**\\n     * The z-index of the helpers must be higher than the canvases in order for\\n     * IMEs to appear on top.\\n     */\\n    z-index: 5;\\n}\\n\\n.xterm .xterm-helper-textarea {\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\\n    position: absolute;\\n    opacity: 0;\\n    left: -9999em;\\n    top: 0;\\n    width: 0;\\n    height: 0;\\n    z-index: -5;\\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\\n    white-space: nowrap;\\n    overflow: hidden;\\n    resize: none;\\n}\\n\\n.xterm .composition-view {\\n    /* TODO: Composition position got messed up somewhere */\\n    background: #000;\\n    color: #FFF;\\n    display: none;\\n    position: absolute;\\n    white-space: nowrap;\\n    z-index: 1;\\n}\\n\\n.xterm .composition-view.active {\\n    display: block;\\n}\\n\\n.xterm .xterm-viewport {\\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\\n    background-color: #000;\\n    overflow-y: scroll;\\n    cursor: default;\\n    position: absolute;\\n    right: 0;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n}\\n\\n.xterm .xterm-screen {\\n    position: relative;\\n}\\n\\n.xterm .xterm-screen canvas {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n}\\n\\n.xterm .xterm-scroll-area {\\n    visibility: hidden;\\n}\\n\\n.xterm-char-measure-element {\\n    display: inline-block;\\n    visibility: hidden;\\n    position: absolute;\\n    top: 0;\\n    left: -9999em;\\n    line-height: normal;\\n}\\n\\n.xterm.enable-mouse-events {\\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\\n    cursor: default;\\n}\\n\\n.xterm.xterm-cursor-pointer,\\n.xterm .xterm-cursor-pointer {\\n    cursor: pointer;\\n}\\n\\n.xterm.column-select.focus {\\n    /* Column selection mode */\\n    cursor: crosshair;\\n}\\n\\n.xterm .xterm-accessibility,\\n.xterm .xterm-message {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n    z-index: 10;\\n    color: transparent;\\n}\\n\\n.xterm .live-region {\\n    position: absolute;\\n    left: -9999px;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden;\\n}\\n\\n.xterm-dim {\\n    opacity: 0.5;\\n}\\n\\n.xterm-underline-1 { text-decoration: underline; }\\n.xterm-underline-2 { text-decoration: double underline; }\\n.xterm-underline-3 { text-decoration: wavy underline; }\\n.xterm-underline-4 { text-decoration: dotted underline; }\\n.xterm-underline-5 { text-decoration: dashed underline; }\\n\\n.xterm-strikethrough {\\n    text-decoration: line-through;\\n}\\n\\n.xterm-screen .xterm-decoration-container .xterm-decoration {\\n\\tz-index: 6;\\n\\tposition: absolute;\\n}\\n\\n.xterm-decoration-overview-ruler {\\n    z-index: 7;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    pointer-events: none;\\n}\\n\\n.xterm-decoration-top {\\n    z-index: 2;\\n    position: relative;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/xterm/css/xterm.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BE;;AAEF;;EAEE;;AAEF;IACI,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,qBAAqB;IACrB,yBAAyB;AAC7B;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN;;;MAGE;IACF,UAAU;AACd;;AAEA;IACI,UAAU;IACV,SAAS;IACT,SAAS;IACT,uFAAuF;IACvF,kBAAkB;IAClB,UAAU;IACV,aAAa;IACb,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,sFAAsF;IACtF,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,uDAAuD;IACvD,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,gFAAgF;IAChF,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,QAAQ;IACR,OAAO;IACP,MAAM;IACN,SAAS;AACb;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;AACV;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,MAAM;IACN,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,oFAAoF;IACpF,eAAe;AACnB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,iBAAiB;AACrB;;AAEA;;IAEI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA,qBAAqB,0BAA0B,EAAE;AACjD,qBAAqB,iCAAiC,EAAE;AACxD,qBAAqB,+BAA+B,EAAE;AACtD,qBAAqB,iCAAiC,EAAE;AACxD,qBAAqB,iCAAiC,EAAE;;AAExD;IACI,6BAA6B;AACjC;;AAEA;CACC,UAAU;CACV,kBAAkB;AACnB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB\",\"sourcesContent\":[\"/**\\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\\n * https://github.com/chjj/term.js\\n * @license MIT\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\n * Originally forked from (with the author's permission):\\n *   Fabrice Bellard's javascript vt100 for jslinux:\\n *   http://bellard.org/jslinux/\\n *   Copyright (c) 2011 Fabrice Bellard\\n *   The original design remains. The terminal itself\\n *   has been extended to include xterm CSI codes, among\\n *   other features.\\n */\\n\\n/**\\n *  Default styles for xterm.js\\n */\\n\\n.xterm {\\n    cursor: text;\\n    position: relative;\\n    user-select: none;\\n    -ms-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n.xterm.focus,\\n.xterm:focus {\\n    outline: none;\\n}\\n\\n.xterm .xterm-helpers {\\n    position: absolute;\\n    top: 0;\\n    /**\\n     * The z-index of the helpers must be higher than the canvases in order for\\n     * IMEs to appear on top.\\n     */\\n    z-index: 5;\\n}\\n\\n.xterm .xterm-helper-textarea {\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\\n    position: absolute;\\n    opacity: 0;\\n    left: -9999em;\\n    top: 0;\\n    width: 0;\\n    height: 0;\\n    z-index: -5;\\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\\n    white-space: nowrap;\\n    overflow: hidden;\\n    resize: none;\\n}\\n\\n.xterm .composition-view {\\n    /* TODO: Composition position got messed up somewhere */\\n    background: #000;\\n    color: #FFF;\\n    display: none;\\n    position: absolute;\\n    white-space: nowrap;\\n    z-index: 1;\\n}\\n\\n.xterm .composition-view.active {\\n    display: block;\\n}\\n\\n.xterm .xterm-viewport {\\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\\n    background-color: #000;\\n    overflow-y: scroll;\\n    cursor: default;\\n    position: absolute;\\n    right: 0;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n}\\n\\n.xterm .xterm-screen {\\n    position: relative;\\n}\\n\\n.xterm .xterm-screen canvas {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n}\\n\\n.xterm .xterm-scroll-area {\\n    visibility: hidden;\\n}\\n\\n.xterm-char-measure-element {\\n    display: inline-block;\\n    visibility: hidden;\\n    position: absolute;\\n    top: 0;\\n    left: -9999em;\\n    line-height: normal;\\n}\\n\\n.xterm.enable-mouse-events {\\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\\n    cursor: default;\\n}\\n\\n.xterm.xterm-cursor-pointer,\\n.xterm .xterm-cursor-pointer {\\n    cursor: pointer;\\n}\\n\\n.xterm.column-select.focus {\\n    /* Column selection mode */\\n    cursor: crosshair;\\n}\\n\\n.xterm .xterm-accessibility,\\n.xterm .xterm-message {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n    z-index: 10;\\n    color: transparent;\\n}\\n\\n.xterm .live-region {\\n    position: absolute;\\n    left: -9999px;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden;\\n}\\n\\n.xterm-dim {\\n    opacity: 0.5;\\n}\\n\\n.xterm-underline-1 { text-decoration: underline; }\\n.xterm-underline-2 { text-decoration: double underline; }\\n.xterm-underline-3 { text-decoration: wavy underline; }\\n.xterm-underline-4 { text-decoration: dotted underline; }\\n.xterm-underline-5 { text-decoration: dashed underline; }\\n\\n.xterm-strikethrough {\\n    text-decoration: line-through;\\n}\\n\\n.xterm-screen .xterm-decoration-container .xterm-decoration {\\n\\tz-index: 6;\\n\\tposition: absolute;\\n}\\n\\n.xterm-decoration-overview-ruler {\\n    z-index: 7;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    pointer-events: none;\\n}\\n\\n.xterm-decoration-top {\\n    z-index: 2;\\n    position: relative;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.2.0';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./xterm.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./xterm.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.nc = undefined;","import XTerm from './XTerm'\n\nexport { XTerm }\n"],"names":["React","PropTypes","Terminal","Xterm","_super","__extends","props","_this","call","terminalRef","createRef","onData","bind","onCursorMove","onKey","onBinary","onLineFeed","onScroll","onSelectionChange","onRender","onResize","onTitleChange","setupTerminal","prototype","terminal","options","addons","forEach","addon","loadAddon","customKeyEventHandler","attachCustomKeyEventHandler","componentDidMount","current","open","componentWillUnmount","dispose","data","event","newPosition","newTitle","render","createElement","className","ref","propTypes","string","object","array","func","Component","root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityTreeRoot","document","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","_handleResize","start","end","onA11yChar","char","_handleChar","onA11yTab","spaceCount","_handleTab","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","css","cell","height","style","width","canvas","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","node","type","handler","disposed","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","oldEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","lower","upper","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onKey","_onRender","_onSelectionChange","_onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadedAddon","_wrappedAddonDispose","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","strings","Infinity","XTerm"],"sourceRoot":""}